<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop.xsd    
">
	<!-- 加载外部属性文件; system-properties-mode为NEVER,即不适用系统属性。 -->
	<context:property-placeholder location="classpath:db.properties" system-properties-mode="NEVER" />

	<!-- 数据源 -->
	<!-- C3P0数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>

	<!-- 配置MyBatis 会话工厂sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- MyBatis配置文件的位置 -->
		<property name="configLocation" value="classpath:mybaties.xml" />
		<!-- mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:cn/xy/dao/*.xml"></property>
	</bean>
	
	<!-- 配置dao接口的扫描配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定dao层接口所在包的位置 -->
		<property name="basePackage" value="cn.xy.dao" />
		<!-- 引用MyBatis 的session工厂 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 注解支持， poxy-target-class="true" 时，使用Cglib动态代理，默认false，使用JDK的Proxy代理 -->
	<aop:aspectj-autoproxy />

</beans>